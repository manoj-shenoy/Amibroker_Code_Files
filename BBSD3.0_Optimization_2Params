// ===================================BBSD3.0 System Optimization Script for 2 Parameters - Profit ATR Lookback and ATR Multiple===============================================

_SECTION_BEGIN("Price");
SetChartOptions(0,chartShowArrows|chartShowDates);
_N(Title = StrFormat("{{NAME}} - {{INTERVAL}} {{DATE}} Open %g, Hi %g, Lo %g, Close %g (%.1f%%) {{VALUES}}", O, H, L, C, SelectedValue( ROC( C, 1 ) ) ));
Plot( C, "Close", ParamColor("Color", colorDefault ), styleNoTitle | ParamStyle("Style") | GetPriceStyle() ); 
_SECTION_END();

_SECTION_BEGIN("VOL EXPANSION STRATEGY");

//length = input(20, minval=1)
length = Param("BB Length",20,1,100,1);

//src = input(close, title="Source")
src = ParamField("Source",field=3);
//mult = input(3.0, minval=0.001, maxval=50, title="StdDev")
mult = Param("StdDev",3.0,1,6,0.1);
//basis = sma(src, length)
basis = MA(src,length);
//dev = mult * stdev(src, length)
dev = mult * StDev(src,length);
//upper = basis + dev
//lower = basis - dev
upper=basis + dev;
lower=basis - dev;
//offset = input(0, "Offset", type = input.integer, minval = -500, maxval = 500)
offset = Param("Offset",0,-500,500,1);
//plot(basis, "Basis", color=#872323, offset = offset)
Plot(basis,"Basis",colorBlack,styleLine,Null,Null,offset,0,1);
//p1 = plot(upper, "Upper", color=color.teal, offset = offset)
//p2 = plot(lower, "Lower", color=color.teal, offset = offset)
p1=Plot(upper, "Upper", colorteal, offset = offset);
p2=Plot(lower, "Lower", colorteal, offset = offset);
//fill(p1, p2, title = "Background", color=#198787, transp=95)

//crossUpper = crossover(close, upper)
//crossLower = crossunder(close, lower)
crossUpper=Cross(Close,upper);
crossLower=Cross(lower,Close);

// =============LEVERAGE==============

Leverage = 3;
SetOption("InitialEquity",100000);
SetOption("accountmargin",100/leverage);
SetOption("FuturesMode", False);

//Profit_ATR_Lookback = input(100, "Profit ATR Lookback", type = input.integer, minval = 1, maxval = 500)
// Profit_ATR_Lookback = Param( "Profit ATR Lookback", 2, 1, 20, 1 );
Profit_ATR_Lookback1=Param( "Profit ATR Lookback", 2, 1, 20, 1 );//1;
Profit_ATR_Lookback= Optimize("Profit ATR Lookback",Profit_ATR_Lookback1,1,20,1);//Param("Profit ATR Lookback",2,1,500,1);

//ATR_Multiple = input(2, "Profit ATR Multiple", type = input.integer, minval = 1, maxval = 10)
ATR_Multiple1 = Param( "ATR_Multiple", 2, 1, 10, 0.5 );
ATR_Multiple = 1;
ATR_Multiple= Optimize("ATR_Multiple", ATR_Multiple1, 1, 10, 0.5 );//Param("Profit ATR Multiple",2,1,10,1);

AvgTrueRange = ATR(Profit_ATR_Lookback);
//Plot(AvgTrueRange,"AvgTrueRange",colorBlueGrey,styleLine,styleOwnScale, width=2);

//max_equity_risk = input(1, "Max Equity Risk (%)", type=input.float, minval=1, maxval=100)
max_equity_risk=Param("Max Equity Risk (%)",1.0,1,100,0.5);

//ATR Definition with EMA (built in ATR uses RMA)
//pine_atr(length) =>
//    trueRange = na(high[1])? high-low : max(max(high - low, abs(high - close[1])), abs(low - close[1]))
    //true range can be also calculated with tr(true)
//    ema(trueRange, length)

Function pine_atr(arg1)

//ATR Defined as Per PineScript
{
  pineatr = 0;
  for (n=1; n<BarCount;n++)
  {
  
	trueRange[n]= IIf (IsNaN(High[n-1]),High[n]-Low[n],Max(Max(High[n] - Low[n], abs(High[n] - Close[n-1])), abs(Low[n] - Close[n-1])));

	pineatr = EMA(trueRange,arg1);  
  }
  return pineatr[n];
  
}

// strategy.risk.max_position_size(100)

// Restrict Trading time to before 1500 Hrs everyday
tn = TimeNum();
endTime = 150000; // endTime in HHMMSS Format
tradingTime = tn < endTime; 

// Position size calculations for max equity risk (determining number of shares to buy/sell) //
PositionRisk = 0.4;//max_equity_risk; // how much (in percent of equity) we risk on a single trade
TradeRisk = Ref(High,-1) - Ref(Low,-1) + TickSize; // reference Last bar - finally 

// Stop Loss based on Trade Risk (High-Low+TickSize)
//ApplyStop(stopTypeLoss,stopModePoint,TradeRisk,1,True);

// position size calculation
PctSize = (PositionRisk/TradeRisk)* Ref(Close,-1);
SetPositionSize(PctSize,spsPercentOfEquity);

//eqty = Equity();
//*
// Accounting for what if Position Value Traded is Greater than current Equity Value
// Trade the whole Equity else Trade PctSize
//PositionSize=0;
//for (i=0; i<BarCount; i++)
//{
//	if (PctSize[i] >= 100)
//	{
		//Leverage = PctSize/100;
		//SetPositionSize(100, spsPercentOfEquity);
//		PositionSize[i] = -100;
		
//	}
//	else
//	{
		//SetPositionSize(PctSize[i],spsPercentOfEquity);
//		PositionSize[i] = -PctSize[i];		
//	}	
//}

// ============================================= xoxo             Buy Condition            xoxo ============================================================

Buy = ((Ref(crossUpper,-1)==1) AND (H > Ref(H,-1) + TickSize) AND tradingTime) OR ((Ref(crossUpper,-2)==1) AND (H > Ref(H,-2) + TickSize) AND tradingTime) ; //
// Buy = (crossUpper AND tradingTime) ; //

// BuyEntryPrice is used to indicate that a buy trade is active and also gives price at which transaction
//takes place
BuyEntryPrice = 0;
SellExitPrice = 0;
SellProfitPrice = 0;
Sell = 0;
//Loop through all bars
for (i=0; i<BarCount; i++)
{
	//Check for no position and entering a new one 
	if (BuyEntryPrice[i]==0 AND Buy[i]==1)
	{
		BuyEntryPrice= H[i-1]+TickSize;//ValueWhen(Buy[i]==1,H[i]+TickSize,0); //H[i-1]+TickSize;
		BuyPrice[i]= BuyEntryPrice[i];
		SellExitPrice = L[i-1] - TickSize;
		SellProfitPrice = BuyEntryPrice[i] + ATR_Multiple * AvgTrueRange[i-1];
	}
	else
		// Check for being in a trade and profit target being hit or SL being hit.
		if ((BuyEntryPrice[i]	>0 AND H[i]>=SellProfitPrice)) // THIS IS CORRECT pine_atr(Profit_ATR_Lookback)
		 
		{
			Sell[i] = 1;
			SellPrice[i] = SellProfitPrice ; //pine_atr(Profit_ATR_Lookback)
			BuyEntryPrice = 0;
		}
		
		else
			if (BuyEntryPrice[i]>0 AND L[i]<= SellExitPrice )
			{
				Sell[i] = 1;
				SellPrice[i] = SellExitPrice;
				BuyEntryPrice = 0;
			}	
}

Buy = ExRem(Buy,Sell);
Sell = ExRem(Sell,Buy);

// Sell Based on either First condition OR Take Profit reached
//Sell = (crossLower AND tradingTime) OR ApplyStop(stopTypeProfit,stopModePercent,buy_profit_target,1,True);// OR ApplyStop(stopTypeLoss,stopModePoint,TradeRisk,1,True); 
//ApplyStop( stopTypeProfit,stopModePoint,buy_profit_target,1,True);
//ApplyStop(stopTypeLoss,stopModePoint,TradeRisk,1,True);

Short = ((Ref(crossLower,-1)==1) AND (L < Ref(L,-1) - TickSize) AND tradingTime) OR ((Ref(crossLower,-2)==1) AND (L < Ref(L,-2) - TickSize) AND tradingTime); //
//Short = (crossLower AND tradingTime); //

// SellEntryPrice is used to indicate an active trade and also shows the transaction price
ShortEntryPrice = 0;
CoverExitPrice = 0;
CoverProfitPrice = 0;
Cover = 0;
//Loop through all bars
for (j=0; j<BarCount; j++)
{
	// Check for no Sell position and Enteering a new one
	if (ShortEntryPrice[j] == 0 AND Short[j]==1)
	{
		ShortEntryPrice=L[j-1] - TickSize;//ValueWhen(Short[j]==1,L[j-1]-TickSize,1); //L[j] - TickSize;
		ShortPrice[j]= ShortEntryPrice[j];
		CoverExitPrice = H[j-1] + TickSize;
		CoverProfitPrice = ShortEntryPrice[j] - ATR_Multiple * AvgTrueRange[j-1];
	}
	else
		// Check for being in a trade and profit target hit
		if (ShortEntryPrice[j]>0 AND L[j] <=  CoverProfitPrice) //pine_atr(Profit_ATR_Lookback)
		 
		{
			Cover[j] = 1;
			CoverPrice[j]= CoverProfitPrice;//ShortEntryPrice - ATR_Multiple * AvgTrueRange[j]; //pine_atr(Profit_ATR_Lookback)
			ShortEntryPrice =0;
		}
		else
			if (ShortEntryPrice[j]>0 AND H[j]>= CoverExitPrice)
			{
				Cover[j] = 1;
				CoverPrice[j] = CoverExitPrice;
				ShortEntryPrice = 0;
			}	
}
			
Short = ExRem(Short,Cover);
Cover = ExRem(Cover,Short);

// Buy Based on either First condition OR Take Profit reached

//Cover = (crossUpper AND tradingTime) OR ApplyStop(stopTypeProfit,stopModePercent,short_profit_target,1,True);// OR ApplyStop(stopTypeLoss,stopModePoint,TradeRisk,1,True);
//ApplyStop( stopTypeProfit,stopModePoint,short_profit_target,1,True);
//ApplyStop(stopTypeLoss,stopModePoint,TradeRisk,1,True);
// ApplyStop(stopTypeLoss,stopModePoint,TradeRisk,0,True);

/*Plot Buy and Sell Arrows*/
PlotShapes(IIf(Buy,shapeSquare,shapeNone),colorGreen,0,L,Offset=-40);
PlotShapes(IIf(Buy,shapeSquare,shapeNone),colorLime,0,L,Offset=-50);
PlotShapes(IIf(Buy,shapeUpArrow,shapeNone),colorWhite,0,L,Offset=-45);

PlotShapes(IIf(Sell,shapeDownArrow,shapeNone),colorOrange,0,H,Offset=-45);

PlotShapes(IIf(Short,shapeSquare,shapeNone),colorRed,0,H,Offset=40); 
PlotShapes(IIf(Short,shapeSquare,shapeNone),colorOrange,0,H,Offset=50);
PlotShapes(IIf(Short,shapeDownArrow,shapeNone),colorWhite,0,H,Offset=-45); 

PlotShapes(IIf(Cover,shapeUpArrow,shapeNone),colorYellow,0,L,Offset=-45);
_SECTION_END();


